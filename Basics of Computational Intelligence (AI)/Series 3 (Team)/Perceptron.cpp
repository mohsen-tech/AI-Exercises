#include <string>
#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
	int A1[9][7] = { { -1,-1,+1,+1,-1,-1,-1 },{ -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,+1,+1,-1,+1,+1,+1 } };
	int	A2[9][7] = { { -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 } };
	int	A3[9][7] = { { -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,-1,+1,-1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,-1,+1,-1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,+1,+1,+1,+1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,+1,-1,-1,-1,+1,+1 } };
	int	B1[9][7] = { { +1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,-1 } };
	int B2[9][7] = { { +1,+1,+1,+1,+1,+1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,-1 } };
	int	B3[9][7] = { { +1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,+1,+1,+1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,-1 } };
	int	C1[9][7] = { { -1,-1,+1,+1,+1,+1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,-1,+1,+1,+1,+1,-1 } };
	int	C2[9][7] = { { -1,-1,+1,+1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,-1,+1,+1,+1,-1,-1 } };
	int	C3[9][7] = { { -1,-1,+1,+1,+1,-1,+1 },{ -1,+1,-1,-1,-1,+1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,-1,+1,+1,+1,-1,-1 } };
	int	D1[9][7] = { { +1,+1,+1,+1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,+1,+1,+1,+1,-1,-1 } };
	int	D2[9][7] = { { +1,+1,+1,+1,+1,-1,-1 },{ +1,-1,-1,-1,-1,+1,-1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,-1,+1 },{ +1,-1,-1,-1,-1,+1,-1 },{ +1,+1,+1,+1,+1,-1,-1 } };
	int	D3[9][7] = { { +1,+1,+1,+1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,+1,+1,+1,+1,-1,-1 } };
	int	E1[9][7] = { { +1,+1,+1,+1,+1,+1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,-1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,+1,+1,-1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,-1,-1,-1,-1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,+1 } };
	int	E2[9][7] = { { +1,+1,+1,+1,+1,+1,+1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,+1,+1,+1,+1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,-1,-1,-1,-1,-1,-1 },{ +1,+1,+1,+1,+1,+1,+1 } };
	int	E3[9][7] = { { +1,+1,+1,+1,+1,+1,+1 },{ -1,+1,-1,-1,-1,-1,+1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,+1,+1,+1,-1,-1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,-1,-1,-1,-1,-1 },{ -1,+1,-1,-1,-1,-1,-1 },{ -1,+1,-1,-1,-1,-1,+1 },{ +1,+1,+1,+1,+1,+1,+1 } };
	int	J1[9][7] = { { -1,-1,-1,+1,+1,+1,+1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,-1,+1,+1,+1,-1,-1 } };
	int	J2[9][7] = { { -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,-1,+1,+1,+1,-1,-1 } };
	int	J3[9][7] = { { -1,-1,-1,-1,+1,+1,+1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,-1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,-1,+1,+1,+1,-1,-1 } };
	int K1[9][7] = { { +1,+1,+1,-1,-1,+1,+1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,+1,-1,-1,-1,-1 },{ -1,+1,+1,-1,-1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,+1,+1,-1,-1,+1,+1 } };
	int	K2[9][7] = { { +1,-1,-1,-1,-1,+1,-1 },{ +1,-1,-1,-1,+1,-1,-1 },{ +1,-1,-1,+1,-1,-1,-1 },{ +1,-1,+1,-1,-1,-1,-1 },{ +1,+1,-1,-1,-1,-1,-1 },{ +1,-1,+1,-1,-1,-1,-1 },{ +1,-1,-1,+1,-1,-1,-1 },{ +1,-1,-1,-1,+1,-1,-1 },{ +1,-1,-1,-1,-1,+1,-1 } };
	int	K3[9][7] = { { +1,+1,+1,-1,-1,+1,+1 },{ -1,+1,-1,-1,-1,+1,-1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,+1,-1,-1,-1,-1 },{ -1,+1,-1,+1,-1,-1,-1 },{ -1,+1,-1,-1,+1,-1,-1 },{ -1,+1,-1,-1,-1,+1,-1 },{ +1,+1,+1,-1,-1,+1,+1 } };

	int t[7] = { 1,0,0,0,0,0,0 }; // target for A
	int b[7] = { 0 }, y[7], w[9][7] = { { 0 } }, alpha = 1;
	bool sw = true;
	while (sw)
	{
		for (int i = 0; i < 9; i++)
		{
			for (int j = 0; j < 7; j++)
			{
				y[j] = A1[i][j] * w[i][j] + b[j];
				w[i][j] = alpha * t[j] * A1[i][j];
				b[j] = alpha * t[j];
			}
		}
		bool flag = true;
		for (int i = 0; i < 7; i++)
			if (y[i] != t[i])
				flag = false;
		if (flag == true)
			sw = false;
	}
	int newY[7];
	for (int i = 0; i < 9; i++)
	{
		for (int j = 0; j < 7; j++)
		{
			newY[j] = A2[i][j] * w[i][j] + b[j];
		}
	}
	cout << "Learning Smaple for A: ";
	bool flag = true;
	for (int i = 0; i < 7; i++)
		if (newY[i] != t[i])
			flag = false;
	if (flag == true)
		for (int i = 0; i < 7; i++)
			cout << newY[i] << " ";
	else
		cout << "false";

	system("pause>A");
	return 0;
}